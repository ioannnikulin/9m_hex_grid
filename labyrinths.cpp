#include "base.hpp"
void f0(vector<field>& labyrinths)
{
    labyrinths.push_back(field(5,6));
    int p = labyrinths.size()-1;
    victory * v = new victory(&labyrinths[p]);
    labyrinths[p].set_cell(1,3, new wall(NULL));
    labyrinths[p].set_cell(2,3, new wall(NULL));
    labyrinths[p].set_cell(3,3, new wall(NULL));
    labyrinths[p].set_cell(4,5, v);
    labyrinths[p].set_start_row(2);
    labyrinths[p].set_start_col(2);
}

void f1(vector<field>& labyrinths)
{
    labyrinths.push_back(field(1,10));
    int p = labyrinths.size()-1;
    victory * v = new victory(&labyrinths[p]);
    labyrinths[p].set_cell(0,9, v);
    labyrinths[p].set_start_row(0);
    labyrinths[p].set_start_col(0);
}
void labTruefunoff(vector<field>& labyrinths){
    int p = labyrinths.size();
    labyrinths.push_back(field(20, 20));
    victory * v = new victory(&labyrinths[p]);
    labyrinths[p].set_cell(0,0, new wall(NULL));
    labyrinths[p].set_cell(0,1, new wall(NULL));
    labyrinths[p].set_cell(0,2, new wall(NULL));
    labyrinths[p].set_start_row(0);
    labyrinths[p].set_start_col(4);
    labyrinths[p].set_cell(0,5, new wall(NULL));
    labyrinths[p].set_cell(0,8, new wall(NULL));
    labyrinths[p].set_cell(0,9, new wall(NULL));
    labyrinths[p].set_cell(0,10, new wall(NULL));
    labyrinths[p].set_cell(0,11, new wall(NULL));
    labyrinths[p].set_cell(0,12, new wall(NULL));
    labyrinths[p].set_cell(0,13, new wall(NULL));
    labyrinths[p].set_cell(0,15, new wall(NULL));
    labyrinths[p].set_cell(0,16, new wall(NULL));
    labyrinths[p].set_cell(0,19, new wall(NULL));
    labyrinths[p].set_cell(1,1, new wall(NULL));
    labyrinths[p].set_cell(1,16, new wall(NULL));
    labyrinths[p].set_cell(1,19, new wall(NULL));
    labyrinths[p].set_cell(2,0, new wall(NULL));
    labyrinths[p].set_cell(2,1, new wall(NULL));
    labyrinths[p].set_cell(2,7, new wall(NULL));
    labyrinths[p].set_cell(2,8, new wall(NULL));
    labyrinths[p].set_cell(2,10, new wall(NULL));
    labyrinths[p].set_cell(2,12, new wall(NULL));
    labyrinths[p].set_cell(2,13, new wall(NULL));
    labyrinths[p].set_cell(2,15, new wall(NULL));
    labyrinths[p].set_cell(2,16, new wall(NULL));
    labyrinths[p].set_cell(2,17, new wall(NULL));
    labyrinths[p].set_cell(2,18, new wall(NULL));
    labyrinths[p].set_cell(2,19, new wall(NULL));
    labyrinths[p].set_cell(3,7, new wall(NULL));
    labyrinths[p].set_cell(3,8, new wall(NULL));
    labyrinths[p].set_cell(3,13, new wall(NULL));
    labyrinths[p].set_cell(3,14, new wall(NULL));
    labyrinths[p].set_cell(3,16, new wall(NULL));
    labyrinths[p].set_cell(3,17, new wall(NULL));
    labyrinths[p].set_cell(3,18, new wall(NULL));
    labyrinths[p].set_cell(3,19, new wall(NULL));
    labyrinths[p].set_cell(4,7, new wall(NULL));
    labyrinths[p].set_cell(4,9, new wall(NULL));
    labyrinths[p].set_cell(4,10, new wall(NULL));
    labyrinths[p].set_cell(4,12, new wall(NULL));
    labyrinths[p].set_cell(4,13, new wall(NULL));
    labyrinths[p].set_cell(4,14, new wall(NULL));
    labyrinths[p].set_cell(4,15, new wall(NULL));
    labyrinths[p].set_cell(4,16, new wall(NULL));
    labyrinths[p].set_cell(5,1, new wall(NULL));
    labyrinths[p].set_cell(5,2, new wall(NULL));
    labyrinths[p].set_cell(5,5, new wall(NULL));
    labyrinths[p].set_cell(5,6, new wall(NULL));
    labyrinths[p].set_cell(5,7, new wall(NULL));
    labyrinths[p].set_cell(5,11, new wall(NULL));
    labyrinths[p].set_cell(5,12, new wall(NULL));
    labyrinths[p].set_cell(5,13, new wall(NULL));
    labyrinths[p].set_cell(5,15, new wall(NULL));
    labyrinths[p].set_cell(5,16, new wall(NULL));
    labyrinths[p].set_cell(5,19, new wall(NULL));
    labyrinths[p].set_cell(6,0, new wall(NULL));
    labyrinths[p].set_cell(6,3, new wall(NULL));
    labyrinths[p].set_cell(6,9, new wall(NULL));
    labyrinths[p].set_cell(6,10, new wall(NULL));
    labyrinths[p].set_cell(6,12, new wall(NULL));
    labyrinths[p].set_cell(6,13, new wall(NULL));
    labyrinths[p].set_cell(6,15, new wall(NULL));
    labyrinths[p].set_cell(7,2, new wall(NULL));
    labyrinths[p].set_cell(7,3, new wall(NULL));
    labyrinths[p].set_cell(7,4, new wall(NULL));
    labyrinths[p].set_cell(7,5, new wall(NULL));
    labyrinths[p].set_cell(7,6, new wall(NULL));
    labyrinths[p].set_cell(7,12, new wall(NULL));
    labyrinths[p].set_cell(7,13, new wall(NULL));
    labyrinths[p].set_cell(7,14, new wall(NULL));
    labyrinths[p].set_cell(7,15, new wall(NULL));
    labyrinths[p].set_cell(8,0, new wall(NULL));
    labyrinths[p].set_cell(8,1, new wall(NULL));
    labyrinths[p].set_cell(8,6, new wall(NULL));
    labyrinths[p].set_cell(8,7, new wall(NULL));
    labyrinths[p].set_cell(8,8, new wall(NULL));
    labyrinths[p].set_cell(8,13, new wall(NULL));
    labyrinths[p].set_cell(8,14, new wall(NULL));
    labyrinths[p].set_cell(8,15, new wall(NULL));
    labyrinths[p].set_cell(8,16, new wall(NULL));
    labyrinths[p].set_cell(8,17, new wall(NULL));
    labyrinths[p].set_cell(8,18, new wall(NULL));
    labyrinths[p].set_cell(9,0, new wall(NULL));
    labyrinths[p].set_cell(9,1, new wall(NULL));
    labyrinths[p].set_cell(9,2, new wall(NULL));
    labyrinths[p].set_cell(9,8, new wall(NULL));
    labyrinths[p].set_cell(9,9, new wall(NULL));
    labyrinths[p].set_cell(9,11, new wall(NULL));
    labyrinths[p].set_cell(9,12, new wall(NULL));
    labyrinths[p].set_cell(9,14, new wall(NULL));
    labyrinths[p].set_cell(9,15, new wall(NULL));
    labyrinths[p].set_cell(9,19, new wall(NULL));
    labyrinths[p].set_cell(10,2, new wall(NULL));
    labyrinths[p].set_cell(10,3, new wall(NULL));
    labyrinths[p].set_cell(10,5, new wall(NULL));
    labyrinths[p].set_cell(10,6, new wall(NULL));
    labyrinths[p].set_cell(10,12, new wall(NULL));
    labyrinths[p].set_cell(10,14, new wall(NULL));
    labyrinths[p].set_cell(10,17, new wall(NULL));
    labyrinths[p].set_cell(10,18, new wall(NULL));
    labyrinths[p].set_cell(10,19, new wall(NULL));
    labyrinths[p].set_cell(11,2, new wall(NULL));
    labyrinths[p].set_cell(11,6, new wall(NULL));
    labyrinths[p].set_cell(11,9, new wall(NULL));
    labyrinths[p].set_cell(11,12, new wall(NULL));
    labyrinths[p].set_cell(11,15, new wall(NULL));
    labyrinths[p].set_cell(11,16, new wall(NULL));
    labyrinths[p].set_cell(11,17, new wall(NULL));
    labyrinths[p].set_cell(11,19, new wall(NULL));
    labyrinths[p].set_cell(12,0, new wall(NULL));
    labyrinths[p].set_cell(12,3, new wall(NULL));
    labyrinths[p].set_cell(12,4, new wall(NULL));
    labyrinths[p].set_cell(12,5, new wall(NULL));
    labyrinths[p].set_cell(12,6, new wall(NULL));
    labyrinths[p].set_cell(12,7, new wall(NULL));
    labyrinths[p].set_cell(12,9, new wall(NULL));
    labyrinths[p].set_cell(12,11, new wall(NULL));
    labyrinths[p].set_cell(12,14, new wall(NULL));
    labyrinths[p].set_cell(12,15, new wall(NULL));
    labyrinths[p].set_cell(12,16, new wall(NULL));
    labyrinths[p].set_cell(13,1, new wall(NULL));
    labyrinths[p].set_cell(13,4, new wall(NULL));
    labyrinths[p].set_cell(13,5, new wall(NULL));
    labyrinths[p].set_cell(13,6, new wall(NULL));
    labyrinths[p].set_cell(13,7, new wall(NULL));
    labyrinths[p].set_cell(13,9, new wall(NULL));
    labyrinths[p].set_cell(13,10, new wall(NULL));
    labyrinths[p].set_cell(13,12, new wall(NULL));
    labyrinths[p].set_cell(14,0, new wall(NULL));
    labyrinths[p].set_cell(14,2, new wall(NULL));
    labyrinths[p].set_cell(14,4, new wall(NULL));
    labyrinths[p].set_cell(14,10, new wall(NULL));
    labyrinths[p].set_cell(14,13, new wall(NULL));
    labyrinths[p].set_cell(14,14, new wall(NULL));
    labyrinths[p].set_cell(14,16, new wall(NULL));
    labyrinths[p].set_cell(14,18, new wall(NULL));
    labyrinths[p].set_cell(14,19, v);
    labyrinths[p].set_cell(15,0, new wall(NULL));
    labyrinths[p].set_cell(15,2, new wall(NULL));
    labyrinths[p].set_cell(15,5, new wall(NULL));
    labyrinths[p].set_cell(15,7, new wall(NULL));
    labyrinths[p].set_cell(15,9, new wall(NULL));
    labyrinths[p].set_cell(15,11, new wall(NULL));
    labyrinths[p].set_cell(15,13, new wall(NULL));
    labyrinths[p].set_cell(15,14, new wall(NULL));
    labyrinths[p].set_cell(15,17, new wall(NULL));
    labyrinths[p].set_cell(15,18, new wall(NULL));
    labyrinths[p].set_cell(15,19, new wall(NULL));
    labyrinths[p].set_cell(16,0, new wall(NULL));
    labyrinths[p].set_cell(16,1, new wall(NULL));
    labyrinths[p].set_cell(16,2, new wall(NULL));
    labyrinths[p].set_cell(16,4, new wall(NULL));
    labyrinths[p].set_cell(16,6, new wall(NULL));
    labyrinths[p].set_cell(16,7, new wall(NULL));
    labyrinths[p].set_cell(16,8, new wall(NULL));
    labyrinths[p].set_cell(16,10, new wall(NULL));
    labyrinths[p].set_cell(16,11, new wall(NULL));
    labyrinths[p].set_cell(16,12, new wall(NULL));
    labyrinths[p].set_cell(16,13, new wall(NULL));
    labyrinths[p].set_cell(16,14, new wall(NULL));
    labyrinths[p].set_cell(16,16, new wall(NULL));
    labyrinths[p].set_cell(16,17, new wall(NULL));
    labyrinths[p].set_cell(16,19, new wall(NULL));
    labyrinths[p].set_cell(17,1, new wall(NULL));
    labyrinths[p].set_cell(17,2, new wall(NULL));
    labyrinths[p].set_cell(17,7, new wall(NULL));
    labyrinths[p].set_cell(17,11, new wall(NULL));
    labyrinths[p].set_cell(17,14, new wall(NULL));
    labyrinths[p].set_cell(17,15, new wall(NULL));
    labyrinths[p].set_cell(17,16, new wall(NULL));
    labyrinths[p].set_cell(17,19, new wall(NULL));
    labyrinths[p].set_cell(18,1, new wall(NULL));
    labyrinths[p].set_cell(18,2, new wall(NULL));
    labyrinths[p].set_cell(18,6, new wall(NULL));
    labyrinths[p].set_cell(18,10, new wall(NULL));
    labyrinths[p].set_cell(18,12, new wall(NULL));
    labyrinths[p].set_cell(18,14, new wall(NULL));
    labyrinths[p].set_cell(18,15, new wall(NULL));
    labyrinths[p].set_cell(18,17, new wall(NULL));
    labyrinths[p].set_cell(18,19, new wall(NULL));
    labyrinths[p].set_cell(19,0, new wall(NULL));
    labyrinths[p].set_cell(19,5, new wall(NULL));
    labyrinths[p].set_cell(19,6, new wall(NULL));
    labyrinths[p].set_cell(19,8, new wall(NULL));
    labyrinths[p].set_cell(19,9, new wall(NULL));
    labyrinths[p].set_cell(19,10, new wall(NULL));
    labyrinths[p].set_cell(19,11, new wall(NULL));
    labyrinths[p].set_cell(19,14, new wall(NULL));
    labyrinths[p].set_cell(19,15, new wall(NULL));
    labyrinths[p].set_cell(19,18, new wall(NULL));
    labyrinths[p].set_cell(19,19, new wall(NULL));
    /*
    Add victory position and player position
    */
}

void fill_labyrinths(vector<field>& labyrinths)
{
    f0(labyrinths);
    f1(labyrinths);
    labTruefunoff(labyrinths);
}

